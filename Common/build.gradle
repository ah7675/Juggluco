plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
//    id "io.freefair.lombok" version "8.0.0-rc2"
}

def task = gradle.startParameter.taskNames[0] ?: ""

//def MINSDK = 19
int MINSDK=19

if(task.contains("LibreOldNosi")&&!task.contains("Wear")) {
    ndkver = '25.2.9519653'
   APPCOMPAT = '1.6.1'
     GMSBASE = '18.4.0'
   GMSWEAR = '18.1.0'

     MINSDK = 19
   CPPSTD = "-std=gnu++2b"

   }
else {
       ndkver = '28.0.12674087'
      APPCOMPAT = '1.7.0'
      GMSWEAR = '19.0.0'
     GMSBASE = '18.5.0'
      MINSDK = 21
   CPPSTD = "-std=gnu++26"
       }
android {
 namespace "tk.glucodata"
    externalNativeBuild {
        cmake {
            version "3.31"
        }
    }
//Can be defined in ~/.gradle/gradle.properties by setting for example:
//thepassword = IDontKnow
//thekeyalias = thealias
//thekeypassword = IDontKnow
//thekeyfile = everyone.keystore

        if(project.hasProperty('thekeypassword')&& "$thekeypassword" != "") {
	    signingConfigs {
		alg {
		    storeFile file("$thekeyfile")
		    storePassword "$thepassword"
		    keyAlias "$thekeyalias"
		    keyPassword "$thekeypassword"
		}
	    }
	}
    else {

        signingConfigs {
            alg {
                storeFile file("everyone.keystore")
                storePassword "IDontKnow"
                keyAlias "thealias"
                keyPassword "IDontKnow"
            }
        }


    }


    defaultConfig {
        minSdk        MINSDK
        targetSdk 34
//        targetSdk 24
        buildConfigField 'int', 'targetSDK', "$targetSdk"
        buildConfigField 'int', 'minSDK', "$minSdk"
        compileSdk 35
        applicationId "tk.glucodata"
         manifestPlaceholders["debuggable"] = "false"
         manifestPlaceholders["requireWatch"] = "true"

	     versionName '9.0.7'
//	multiDexEnabled true

        buildConfigField 'String', 'BUILD_TIME', 'new java.text.SimpleDateFormat("HH:mm:ss dd-MMM-yyyy").format(new java.util.Date(' + System.currentTimeMillis() + 'L))'
        buildConfigField 'int', 'isRelease', '0'
        buildConfigField 'int', 'isReleaseID', '0'

        externalNativeBuild {
            cmake {
                version "3.22.1"
//		cppFlags  " -DAPPID=\\\"$applicationId\\\"   -DAPPVERSION=\\\"$versionName\\\" "
		cppFlags  " -DAPPID=\"quotes($applicationId)\"   -DAPPVERSION=\"quotes($versionName)\" "
		cFlags  " -DAPPID=\"quotes($applicationId)\"   -DAPPVERSION=\"quotes($versionName)\" "
        arguments "-DANDROID_SUPPORT_FLEXIBLE_PAGE_SIZES=ON"


            }
        }
//	resourceConfigurations += ["en", "nl", "fr","it", "de", "pl", "pt","be","uk"]
    //ndk { abiFilters  'armeabi-v7a' }
     //  ndk { abiFilters  'arm64-v8a' }
        signingConfig signingConfigs.alg
    buildToolsVersion '33.0.0'
    }

flavorDimensions = ['wearos','libreVersion','SiBionics', 'DexCom']
//    flavorDimensions 'wearos','libreVersion','SiBionics', 'DexCom'

    productFlavors {

        dex {
            dimension 'DexCom'
            versionNameSuffix '-x'
            buildConfigField 'int', 'DexCom', '1'
            externalNativeBuild.cmake {
			     arguments "-DDEXCOM=TRUE"
                cppFlags "   -DDEXCOM=1 "
                cFlags "   -DDEXCOM=1 "
            }
        }
        nodex {
            dimension 'DexCom'
            versionNameSuffix '-nox'
            buildConfigField 'int', 'DexCom', '0'
            externalNativeBuild.cmake {
            }
        }

        libreOld {
	//******  Zet op rollout op 100% ******
            dimension 'libreVersion'
            versionCode                                                                                         520                                           //LIBRE2ONLY
         //	versionName '9.0.7-no3'
            versionNameSuffix '-no3'
            buildConfigField 'int', 'libreVersion', '2'
		    externalNativeBuild.cmake {

            	}
		   }
        libre3 {
            // targetSdk 26
	   minSdk 26

        buildConfigField 'int', 'minSDK', "$minSdk"
       //ndkver = '27.0.11718014 rc1'
//	   minSdk 23
            dimension 'libreVersion'
		versionNameSuffix '-li3'
		versionCode                                                                                        521                                                                                                                                                                               //LIBRE3
	//******  Zet op rollout op 100% ******

           	buildConfigField 'int', 'libreVersion', '3'
		    externalNativeBuild.cmake {
			arguments "-Dlibre3=TRUE"
			cppFlags "   -DLIBRE3=1 "
			cFlags "   -DLIBRE3=1 "

            }

		}
        si {
	  	minSdk 21
		minSdkVersion 21
      dimension 'SiBionics'
		versionNameSuffix '-si'
		versionCode                                                                                   521                                      
	   buildConfigField 'int', 'SiBionics', '1'
	   externalNativeBuild.cmake {
         cppFlags "   -DSIBIONICS=1 "
         cFlags "   -DSIBIONICS=1 "
        	}
		}
        nosi {
        	dimension 'SiBionics'
         versionCode                      520                                      
         versionNameSuffix '-nosi'
	      buildConfigField 'int', 'SiBionics', '0'
	      externalNativeBuild.cmake {
         		}
		}

        wear {
          // targetSdk 26
//           targetSdk 31

            // targetSdk 30

            dimension 'wearos'
		minSdk 26
        buildConfigField 'int', 'minSDK', "$minSdk"
		versionCode                                                                                        522                                                                                                                                                                               //WATCH
	//******  Zet op rollout op 100% ******
		//versionName '9.0.7-wear'
		versionNameSuffix '-wear'
		signingConfig signingConfigs.alg

//            buildConfigField 'int', 'targetSDK', "$targetSdk"
           buildConfigField 'int', 'isWear', '1'
            externalNativeBuild.cmake {
	        arguments "-DWEAROS=TRUE"
                cppFlags " -DWEAROS=1  -DUSEDIN=1   "
                cFlags " -DWEAROS=1  -DUSEDIN=1   "

                }

	  buildFeatures {
		viewBinding true
	    }
        }

        small {

//        minSdk 19
            dimension 'wearos'
		versionCode                                                                                        522                                                                                                                                                                               //WATCH
		//versionName '9.0.7-small'
		versionNameSuffix '-small'
		signingConfig signingConfigs.alg

           buildConfigField 'int', 'isWear', '1'
            externalNativeBuild.cmake {
	        arguments "-DWEAROS=TRUE"
                cppFlags " -DWEAROS=1  -DUSEDIN=1   "
                cFlags " -DWEAROS=1  -DUSEDIN=1   "

                }

	  buildFeatures {
		viewBinding true
	    }
        }
       mobile {
//        minSdk 19
            dimension 'wearos'
		   versionNameSuffix '-phone'
           buildConfigField 'int', 'isWear', '0'
        }
    }
buildTypes {


        release {
            signingConfig signingConfigs.alg
            minifyEnabled true 
	    shrinkResources true

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro', 'proguard-rules.my', 'proguard-rules.log'

            buildConfigField 'int', 'isRelease', '1'
        buildConfigField 'int', 'isReleaseID', '1'
        buildConfigField 'int', 'doLog', '0'

            jniDebuggable false
            debuggable false
            externalNativeBuild.cmake {
                cppFlags "$CPPSTD","-DRELEASEID=1","-DRELEASE=1","-DNORAWSTREAM=1" , "-DRELEASEDIR=1", "-DNOLOG=1" //, "-DSCANLOG=1" , "-DNOLOG=1"
                cFlags "-DRELEASEID=1","-DRELEASE=1","-DNORAWSTREAM=1" , "-DRELEASEDIR=1", "-DNOLOG=1" //, "-DSCANLOG=1" , "-DNOLOG=1"


                }
        }
        releaselog {
            versionNameSuffix '-log'
            signingConfig signingConfigs.alg
            minifyEnabled true 
	    shrinkResources true
         manifestPlaceholders["requireWatch"] = "false"
         manifestPlaceholders["debuggable"] = "true"

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro', 'proguard-rules.my', 'proguard-rules.log'

        buildConfigField 'int', 'doLog', '1'
            buildConfigField 'int', 'isRelease', '1'
        buildConfigField 'int', 'isReleaseID', '1'

            jniDebuggable false
            debuggable false
            externalNativeBuild.cmake {
//                 arguments "-DANDROID_SANITIZE=hwaddress"
                cppFlags "$CPPSTD","-DRELEASEID=1","-DRELEASE=1","-DNORAWSTREAM=1" , "-DRELEASEDIR=1", "-DSCANLOG=1"
                cFlags "-DRELEASEID=1","-DRELEASE=1","-DNORAWSTREAM=1" , "-DRELEASEDIR=1", "-DSCANLOG=1"


                }
        }
        releasedub {
            versionNameSuffix 'DUB'
	    applicationIdSuffix ".dub"
            signingConfig signingConfigs.alg
            minifyEnabled true 
	    shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro', 'proguard-rules.my', 'proguard-rules.log'
            jniDebuggable false
            debuggable false

         manifestPlaceholders["requireWatch"] = "false"
         manifestPlaceholders["debuggable"] = "true"

        buildConfigField 'int', 'doLog', '0'
            buildConfigField 'int', 'isRelease', '1'
        buildConfigField 'int', 'isReleaseID', '1'
            externalNativeBuild.cmake {
                cppFlags "$CPPSTD","-DRELEASEID=1","-DRELEASE=1","-DNORAWSTREAM=1" , "-DRELEASEDIR=1", "-DNOLOG=1", "-DAPPSUFFIX=\"quotes($applicationIdSuffix)\" "           //, "-DSCANLOG=1" , "-DNOLOG=1"
                cFlags "-DRELEASEID=1","-DRELEASE=1","-DNORAWSTREAM=1" , "-DRELEASEDIR=1", "-DNOLOG=1", "-DAPPSUFFIX=\"quotes($applicationIdSuffix)\" "           //, "-DSCANLOG=1" , "-DNOLOG=1"
//                cppFlags "$CPPSTD","-DRELEASEID=1","-DRELEASE=1","-DNORAWSTREAM=1" , "-DRELEASEDIR=1", "-DNOLOG=1"         //, "-DSCANLOG=1" , "-DNOLOG=1"


                }
        }
        debugdub {
         manifestPlaceholders["requireWatch"] = "false"
         manifestPlaceholders["debuggable"] = "true"
            signingConfig signingConfigs.alg
            minifyEnabled  false
            jniDebuggable true
            buildConfigField 'int', 'isReleaseID', '0'
            versionNameSuffix 'DUBDEBUG'
	    applicationIdSuffix ".dub"
        buildConfigField 'int', 'doLog', '1'
            externalNativeBuild.cmake {
                cppFlags "$CPPSTD", "-DDEBUG=1", "-DSCANLOG=1", "-DAPPSUFFIX=\"quotes($applicationIdSuffix)\""
                cFlags  "-DDEBUG=1", "-DSCANLOG=1", "-DAPPSUFFIX=\"quotes($applicationIdSuffix)\""

	    	}
            debuggable true
        }
        release2 {
         manifestPlaceholders["requireWatch"] = "false"
         manifestPlaceholders["debuggable"] = "true"
            versionNameSuffix 'release2'
	    applicationIdSuffix ".debug"

            buildConfigField 'int', 'isReleaseID', '1'
            buildConfigField 'int', 'doLog', '0'

            jniDebuggable false
            debuggable false

            signingConfig signingConfigs.alg
            minifyEnabled true 
	    shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro', 'proguard-rules.my', 'proguard-rules.log'
           // proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro', 'proguard-rules.my'
            externalNativeBuild.cmake {
                cppFlags "$CPPSTD","-DDEBUG=1", "-DSCANLOG=1",  "-DAPPSUFFIX=\"quotes($applicationIdSuffix)\""
                cFlags "-DDEBUG=1", "-DSCANLOG=1",  "-DAPPSUFFIX=\"quotes($applicationIdSuffix)\""
//               arguments " -DCMAKE_CXX_FLAGS=' -DCMAKE_VERBOSE_MAKEFILE=1 -DDEBUG=1 -DSCANLOG=1 -DRELEASEDIR=1'"
                }
            }
        release2log {
         manifestPlaceholders["requireWatch"] = "false"
         manifestPlaceholders["debuggable"] = "true"
            versionNameSuffix 'release2log'
	    applicationIdSuffix ".debug"

            buildConfigField 'int', 'isReleaseID', '1'
             buildConfigField 'int', 'doLog', '1'

            jniDebuggable false
            debuggable false

            signingConfig signingConfigs.alg

            minifyEnabled  false
	    shrinkResources false 

            externalNativeBuild.cmake {
//                 arguments "-DANDROID_SANITIZE=hwaddress"
                cppFlags "$CPPSTD", "-DDEBUG=1", "-DSCANLOG=1", "-DAPPSUFFIX=\"quotes($applicationIdSuffix)\""
                cFlags "-DDEBUG=1", "-DSCANLOG=1", "-DAPPSUFFIX=\"quotes($applicationIdSuffix)\""

            	}
            }
        debug {
         manifestPlaceholders["requireWatch"] = "false"
         manifestPlaceholders["debuggable"] = "true"
	    applicationIdSuffix ".debug"
            versionNameSuffix 'DEBUG'

            buildConfigField 'int', 'isReleaseID', '0'
             buildConfigField 'int', 'doLog', '1'

            jniDebuggable true 
            debuggable true

            signingConfig signingConfigs.alg
            externalNativeBuild.cmake {
                cppFlags "$CPPSTD", "-DDEBUG=1", "-DSCANLOG=1", "-DAPPSUFFIX=\"quotes($applicationIdSuffix)\"","-DNDK_DEBUG=1","-UNDEBUG"
                cFlags "-DDEBUG=1", "-DSCANLOG=1", "-DAPPSUFFIX=\"quotes($applicationIdSuffix)\"","-DNDK_DEBUG=1","-UNDEBUG"


            }
            minifyEnabled  false
        }
        releasedebug {
         manifestPlaceholders["requireWatch"] = "false"
         manifestPlaceholders["debuggable"] = "true"
            versionNameSuffix 'releasedebug'
            signingConfig signingConfigs.alg
            minifyEnabled true 
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro', 'proguard-rules.my', 'proguard-rules.log'
            jniDebuggable false
        buildConfigField 'int', 'doLog', '0'
            buildConfigField 'int', 'isRelease', '1'
        buildConfigField 'int', 'isReleaseID', '0'
            externalNativeBuild.cmake {
                cppFlags "$CPPSTD","-DRELEASEID=0","-DRELEASE=1","-DNORAWSTREAM=1" , "-DRELEASEDIR=0", "-DNOLOG=1" //, "-DSCANLOG=1" , "-DNOLOG=1"
                cFlags "-DRELEASEID=0","-DRELEASE=1","-DNORAWSTREAM=1" , "-DRELEASEDIR=0", "-DNOLOG=1" //, "-DSCANLOG=1" , "-DNOLOG=1"

//         cppFlags "$CPPSTD","-DRELEASE=1", "-DRELEASEDIR=1","-DNORAWSTREAM=1" //, "-DNOLOG=1"
//	         cppFlags "$CPPSTD","-DRELEASE=1", "-DRELEASEDIR=1","-DNORAWSTREAM=1", "-DNOLOG=1"
//                arguments " -DCMAKE_VERBOSE_MAKEFILE=1  -DCMAKE_CXX_FLAGS=' -DRELEASE=1 -DNORAWSTREAM=1 -DNOLOG=1'" 

                }
        }
        debug2 {
         manifestPlaceholders["requireWatch"] = "false"
         manifestPlaceholders["debuggable"] = "true"
            versionNameSuffix 'debug2'
	  //  debuggable true		
           // jniDebuggable true
            signingConfig signingConfigs.alg
            minifyEnabled true 
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro', 'proguard-rules.my'
	    zipAlignEnabled true
            buildConfigField 'int', 'isReleaseID', '1'
        buildConfigField 'int', 'doLog', '1'
            externalNativeBuild.cmake {
                cppFlags "$CPPSTD","-DRELEASEID=1", "-DDEBUG=1", "-DSCANLOG=1", "-DRELEASEDIR=1"
                cFlags "-DRELEASEID=1", "-DDEBUG=1", "-DSCANLOG=1", "-DRELEASEDIR=1"
               // cppFlags "$CPPSTD", "-DDEBUG=1", "-DSCANLOG=1"
	    	}
        }
        debug3 {
         manifestPlaceholders["requireWatch"] = "false"
         manifestPlaceholders["debuggable"] = "true"
            signingConfig signingConfigs.alg
            minifyEnabled  false
            buildConfigField 'int', 'isReleaseID', '1'
        buildConfigField 'int', 'doLog', '1'
            externalNativeBuild.cmake {
                cppFlags "$CPPSTD","-DRELEASEID=1","-DDEBUG=1", "-DSCANLOG=1", "-DRELEASEDIR=1","-DNDK_DEBUG=1","-UNDEBUG"
                cFlags "-DRELEASEID=1","-DDEBUG=1", "-DSCANLOG=1", "-DRELEASEDIR=1","-DNDK_DEBUG=1","-UNDEBUG"
		}

            versionNameSuffix 'DEBUGRELEASE'
            jniDebuggable true
            debuggable true




        }
    	}
    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.22.1"
        }
    }
 compileOptions {
      sourceCompatibility JavaVersion.VERSION_17
      targetCompatibility JavaVersion.VERSION_17
//      coreLibraryDesugaringEnabled true

    }


   ndkVersion "$ndkver"

    kotlinOptions {
        jvmTarget =  JavaVersion.VERSION_17
    }

    packagingOptions {
        jniLibs {
            useLegacyPackaging = true
            doNotStrip '**/libcalibrate.so'
            doNotStrip '**/libcalibrat2.so'
            doNotStrip '**/libinit.so'
         //  doNotStrip '**/lib??*.so'
           doNotStrip '**/lib[A-Za-mo-z]?*.so'
//           doNotStrip '**/*.so'
	    }
       }
    lint {
        abortOnError false
    }
    dependenciesInfo {
        includeInApk true
        includeInBundle true
    }
    compileSdk 35
    buildToolsVersion '35.0.0 rc4'
    buildFeatures {
        aidl true
    }
       sourceSets {
       mobileLibre3SiDex {
            java.srcDirs = ['src/mobileSi/java']
            jniLibs.srcDirs = [ 'src/mobileSi/jniLibs']
            manifest { srcFile 'src/mobileSi/AndroidManifest.xml' }
            res.srcDirs= ['src/mobileSi/res']
            }
           mobileLibre3SiNodex {
               java.srcDirs = ['src/mobileSi/java']
               jniLibs.srcDirs = [ 'src/mobileSi/jniLibs']
               manifest { srcFile 'src/mobileSi/AndroidManifest.xml' }
               res.srcDirs= ['src/mobileSi/res']
           }
       mobileLibreOldSiDex {
            java.srcDirs = ['src/mobileSi/java']
            jniLibs.srcDirs = [ 'src/mobileSi/jniLibs']
            manifest { srcFile 'src/mobileSi/AndroidManifest.xml' }
            }
           mobileLibreOldSiNodex {
               java.srcDirs = ['src/mobileSi/java']
               jniLibs.srcDirs = [ 'src/mobileSi/jniLibs']
               manifest { srcFile 'src/mobileSi/AndroidManifest.xml' }
           }
           mobileLibreOldNosiDex {
               java.srcDirs = ['src/mobileNosi/java']
               res.srcDirs= ['src/mobileNosi/res']
           }
           mobileLibreOldNosiNodex {
               java.srcDirs = ['src/mobileNosi/java']
               res.srcDirs= ['src/mobileNosi/res']
           }

           wearLibre3SiDex{
               java.srcDirs = ['src/wearSi/java']
               jniLibs.srcDirs = [ 'src/wearSi/jniLibs']
           }

           wearLibre3SiNodex{
            java.srcDirs = ['src/wearSi/java']
            jniLibs.srcDirs = [ 'src/wearSi/jniLibs']
            }
         wearLibreOldSiDex{
            java.srcDirs = ['src/wearSi/java']
            jniLibs.srcDirs = [ 'src/wearSi/jniLibs']
            }
           wearLibreOldSiNodex{
               java.srcDirs = ['src/wearSi/java']
               jniLibs.srcDirs = [ 'src/wearSi/jniLibs']
           }
         smallLibre3SiNodex{
            java.srcDirs = ['src/smallSi/java']
            jniLibs.srcDirs = [ 'src/smallSi/jniLibs']
            }
           smallLibre3SiDex{
               java.srcDirs = ['src/smallSi/java']
               jniLibs.srcDirs = [ 'src/smallSi/jniLibs']
           }


           smallLibreOldSiNodex{
            java.srcDirs = ['src/smallSi/java']
            jniLibs.srcDirs = [ 'src/smallSi/jniLibs']
            }
         }

}

allprojects {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
    }
}

dependencies {
//    mobileImplementation 'com.google.code.gson:gson:2.10.1'
//	implementation fileTree(dir: 'libs', include: ['*.jar'])

//    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:1.1.5"
  // implementation "androidx.multidex:multidex:2.0.1"
//    libre3Implementation files('/n/ojka/Downloads/jndi-1.2.1.jar')
//    implementation files('/n/ojka/Downloads/multidex-2.0.1.aar')
//      implementation 'androidx.multidex:multidex:2.0.1'
//    libre3Implementation 'javax.naming:jndi:1.2.1'
//    libre3Implementation  'jndi:jndi:1.2.1'
//	mobileImplementation 'org.projectlombok:lombok:1.18.26'
//	mobileAnnotationProcessor 'org.projectlombok:lombok:1.18.26'
//	mobileImplementation 'com.github.lecho:hellocharts-android:v1.5.8'
//	mobileImplementation 'com.github.lecho:hellocharts-library:1.5.8@aar'

    implementation 'androidx.recyclerview:recyclerview:1.3.2'
    implementation 'androidx.startup:startup-runtime:1.2.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.9.0'
    implementation 'androidx.core:core-ktx:1.15.0'
  implementation 'com.android.support:support-annotations:28.0.0'

    implementation "androidx.appcompat:appcompat:$APPCOMPAT"
    implementation 'androidx.activity:activity:1.9.3'
	implementation 'androidx.core:core:1.15.0'
   implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.9.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.9.0'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:2.0.21'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:2.0.21'
    implementation "com.google.android.gms:play-services-base:$GMSBASE"
 implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.9.0'
  mobileImplementation 'androidx.health.connect:connect-client:1.1.0-alpha10'
//  mobileImplementation files('/n/ojka/Downloads/ciq-companion-app-sdk-2.0.3.aar');
  mobileImplementation "com.garmin.connectiq:ciq-companion-app-sdk:2.0.3@aar"

    compileOnly 'com.google.android.wearable:wearable:2.9.0'
    implementation "com.google.android.gms:play-services-wearable:$GMSWEAR"
  // implementation 'com.google.android.gms:play-services-wearable:10.2.0' Needed for China? https://developer.android.com/training/wearables/creating-app-china#data-layer


    wearImplementation 'androidx.activity:activity-ktx:1.9.3'
    wearImplementation 'androidx.constraintlayout:constraintlayout:2.2.0'
    wearImplementation 'com.google.android.material:material:1.12.0'
    wearImplementation 'androidx.databinding:viewbinding:8.7.2'
    wearImplementation 'androidx.core:core-ktx:1.15.0'


    wearImplementation 'androidx.wear:wear:1.3.0'

    wearImplementation 'androidx.percentlayout:percentlayout:1.0.0'
    wearImplementation 'androidx.legacy:legacy-support-v4:1.0.0'


    wearImplementation 'androidx.wear.watchface:watchface-style:1.2.1'
    wearImplementation 'androidx.wear.watchface:watchface-complications:1.2.1'
    wearImplementation 'androidx.wear.watchface:watchface-editor:1.2.1'
    wearImplementation 'androidx.wear.watchface:watchface-client:1.2.1'
    wearImplementation 'androidx.wear.watchface:watchface:1.2.1'
    wearImplementation 'androidx.wear.watchface:watchface-complications-rendering:1.2.1'
    wearImplementation 'androidx.wear.watchface:watchface-complications-data-source-ktx:1.2.1'
     wearImplementation 'androidx.core:core-splashscreen:1.2.0-alpha02'
     wearImplementation 'androidx.wear.protolayout:protolayout-external-protobuf:1.2.1'
configurations {
mobileLibre3SiDexImplementation {}
mobileLibreOldSiDexImplementation {}
    mobileLibre3SiNodexImplementation {}
    mobileLibreOldSiNodexImplementation {}
}
    mobileLibre3SiNodexImplementation 'com.google.android.gms:play-services-code-scanner:16.1.0'
    mobileLibre3SiNodexImplementation 'com.journeyapps:zxing-android-embedded:4.3.0'
    mobileLibreOldSiNodexImplementation 'com.google.android.gms:play-services-code-scanner:16.1.0'
    mobileLibreOldSiNodexImplementation 'com.journeyapps:zxing-android-embedded:4.3.0'

    mobileLibre3SiDexImplementation 'com.google.android.gms:play-services-code-scanner:16.1.0'
    mobileLibre3SiDexImplementation 'com.journeyapps:zxing-android-embedded:4.3.0'
    mobileLibreOldSiDexImplementation 'com.google.android.gms:play-services-code-scanner:16.1.0'
    mobileLibreOldSiDexImplementation 'com.journeyapps:zxing-android-embedded:4.3.0'

}

